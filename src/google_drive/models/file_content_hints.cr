#  Drive API
#
# Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
#
# The version of the OpenAPI document: v3
#
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module GoogleDrive
  # Additional information about the content of the file. These fields are never populated in responses.
  class FileContentHints
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # Text to be indexed for the file to improve fullText queries. This is limited to 128 KB in length and may contain HTML elements. For more information, see Manage file metadata.
    @[JSON::Field(key: "indexableText", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter indexable_text : String? = nil

    @[JSON::Field(key: "thumbnail", type: GoogleDrive::FileContentHintsThumbnail?, default: nil, required: false, nullable: false, emit_null: false)]
    getter thumbnail : GoogleDrive::FileContentHintsThumbnail? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @indexable_text : String? = nil,
      @thumbnail : GoogleDrive::FileContentHintsThumbnail? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_thumbnail = @thumbnail).nil?
        invalid_properties.concat(_thumbnail.list_invalid_properties_for("thumbnail")) if _thumbnail.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_thumbnail = @thumbnail).nil?
        return false if _thumbnail.is_a?(OpenApi::Validatable) && !_thumbnail.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] indexable_text Object to be assigned
    def indexable_text=(new_value : String?)
      @indexable_text = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] thumbnail Object to be assigned
    def thumbnail=(new_value : GoogleDrive::FileContentHintsThumbnail?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @thumbnail = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@indexable_text, @thumbnail)
  end
end
