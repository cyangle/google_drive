#  Drive API
#
# Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
#
# The version of the OpenAPI document: v3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module GoogleDrive
  class PermissionPermissionDetailsInner
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # Whether this permission is inherited. This field is always populated. This is an output-only field.
    @[JSON::Field(key: "inherited", type: Bool?, default: nil, required: false, nullable: false, emit_null: false)]
    getter inherited : Bool? = nil

    # The ID of the item from which this permission is inherited. This is an output-only field.
    @[JSON::Field(key: "inheritedFrom", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter inherited_from : String? = nil

    # The permission type for this user. While new values may be added in future, the following are currently possible:   - file  - member
    @[JSON::Field(key: "permissionType", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter permission_type : String? = nil

    # The primary role for this user. While new values may be added in the future, the following are currently possible:   - organizer  - fileOrganizer  - writer  - commenter  - reader
    @[JSON::Field(key: "role", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter role : String? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @inherited : Bool? = nil,
      @inherited_from : String? = nil,
      @permission_type : String? = nil,
      @role : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] inherited Object to be assigned
    def inherited=(new_value : Bool?)
      @inherited = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] inherited_from Object to be assigned
    def inherited_from=(new_value : String?)
      @inherited_from = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] permission_type Object to be assigned
    def permission_type=(new_value : String?)
      @permission_type = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] role Object to be assigned
    def role=(new_value : String?)
      @role = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@inherited, @inherited_from, @permission_type, @role)
  end
end
