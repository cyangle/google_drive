#  Drive API
#
# Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
#
# The version of the OpenAPI document: v3
#
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module GoogleDrive
  # A request to modify the set of labels on a file. This request may contain many modifications that will either all succeed or all fail transactionally.
  class ModifyLabelsRequest
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # This is always drive#modifyLabelsRequest
    @[JSON::Field(key: "kind", type: String?, default: "drive#modifyLabelsRequest", required: false, nullable: false, emit_null: false)]
    getter kind : String? = "drive#modifyLabelsRequest"

    # The list of modifications to apply to the labels on the file.
    @[JSON::Field(key: "labelModifications", type: Array(GoogleDrive::LabelModification)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter label_modifications : Array(GoogleDrive::LabelModification)? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @kind : String? = "drive#modifyLabelsRequest",
      @label_modifications : Array(GoogleDrive::LabelModification)? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_label_modifications = @label_modifications).nil?
        invalid_properties.concat(OpenApi::ContainerValidator.list_invalid_properties_for(key: "label_modifications", container: _label_modifications)) if _label_modifications.is_a?(Array)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_label_modifications = @label_modifications).nil?
        return false if _label_modifications.is_a?(Array) && !OpenApi::ContainerValidator.valid?(container: _label_modifications)
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] kind Object to be assigned
    def kind=(kind : String?)
      if kind.nil?
        return @kind = nil
      end
      _kind = kind.not_nil!
      @kind = _kind
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] label_modifications Object to be assigned
    def label_modifications=(label_modifications : Array(GoogleDrive::LabelModification)?)
      if label_modifications.nil?
        return @label_modifications = nil
      end
      _label_modifications = label_modifications.not_nil!
      OpenApi::ContainerValidator.validate(container: _label_modifications) if _label_modifications.is_a?(Array)
      @label_modifications = _label_modifications
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@kind, @label_modifications)
  end
end
