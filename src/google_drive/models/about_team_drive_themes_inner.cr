#  Drive API
#
# Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
#
# The version of the OpenAPI document: v3
#
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module GoogleDrive
  @[JSON::Serializable::Options(emit_nulls: true)]
  class AboutTeamDriveThemesInner
    include JSON::Serializable
    include JSON::Serializable::Unmapped

    # Optional properties

    # Deprecated - use driveThemes/backgroundImageLink instead.
    @[JSON::Field(key: "backgroundImageLink", type: String?, presence: true, ignore_serialize: background_image_link.nil? && !background_image_link_present?)]
    property background_image_link : String?

    @[JSON::Field(ignore: true)]
    property? background_image_link_present : Bool = false

    # Deprecated - use driveThemes/colorRgb instead.
    @[JSON::Field(key: "colorRgb", type: String?, presence: true, ignore_serialize: color_rgb.nil? && !color_rgb_present?)]
    property color_rgb : String?

    @[JSON::Field(ignore: true)]
    property? color_rgb_present : Bool = false

    # Deprecated - use driveThemes/id instead.
    @[JSON::Field(key: "id", type: String?, presence: true, ignore_serialize: id.nil? && !id_present?)]
    property id : String?

    @[JSON::Field(ignore: true)]
    property? id_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @background_image_link : String? = nil,
      @color_rgb : String? = nil,
      @id : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@background_image_link, @background_image_link_present, @color_rgb, @color_rgb_present, @id, @id_present)
  end
end
