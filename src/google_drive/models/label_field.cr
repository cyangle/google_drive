#  Drive API
#
# Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
#
# The version of the OpenAPI document: v3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./user"

module GoogleDrive
  # Representation of a label field.
  class LabelField
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # Only present if valueType is dateString. RFC 3339 formatted date: YYYY-MM-DD.
    @[JSON::Field(key: "dateString", type: Array(Time)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter date_string : Array(Time)? = nil

    # The identifier of this field.
    @[JSON::Field(key: "id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter id : String? = nil

    # Only present if valueType is integer.
    @[JSON::Field(key: "integer", type: Array(String)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter integer : Array(String)? = nil

    # This is always drive#labelField.
    @[JSON::Field(key: "kind", type: String?, default: "drive#labelField", required: false, nullable: false, emit_null: false)]
    getter kind : String? = "drive#labelField"

    # Only present if valueType is selection.
    @[JSON::Field(key: "selection", type: Array(String)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter selection : Array(String)? = nil

    # Only present if valueType is text.
    @[JSON::Field(key: "text", type: Array(String)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter text : Array(String)? = nil

    # Only present if valueType is user.
    @[JSON::Field(key: "user", type: Array(GoogleDrive::User)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter user : Array(GoogleDrive::User)? = nil

    # The field type. While new values may be supported in the future, the following are currently allowed:   - dateString  - integer  - selection  - text  - user
    @[JSON::Field(key: "valueType", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter value_type : String? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @date_string : Array(Time)? = nil,
      @id : String? = nil,
      @integer : Array(String)? = nil,
      @kind : String? = "drive#labelField",
      @selection : Array(String)? = nil,
      @text : Array(String)? = nil,
      @user : Array(GoogleDrive::User)? = nil,
      @value_type : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_user = @user).nil?
        invalid_properties.concat(OpenApi::ContainerValidator.list_invalid_properties_for(key: "user", container: _user)) if _user.is_a?(Array)
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_user = @user).nil?
        return false if _user.is_a?(Array) && !OpenApi::ContainerValidator.valid?(container: _user)
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] date_string Object to be assigned
    def date_string=(new_value : Array(Time)?)
      @date_string = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] id Object to be assigned
    def id=(new_value : String?)
      @id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] integer Object to be assigned
    def integer=(new_value : Array(String)?)
      @integer = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] kind Object to be assigned
    def kind=(new_value : String?)
      @kind = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] selection Object to be assigned
    def selection=(new_value : Array(String)?)
      @selection = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] text Object to be assigned
    def text=(new_value : Array(String)?)
      @text = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] user Object to be assigned
    def user=(new_value : Array(GoogleDrive::User)?)
      unless new_value.nil?
        OpenApi::ContainerValidator.validate(container: new_value) if new_value.is_a?(Array)
      end

      @user = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] value_type Object to be assigned
    def value_type=(new_value : String?)
      @value_type = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@date_string, @id, @integer, @kind, @selection, @text, @user, @value_type)
  end
end
