#  Drive API
#
# Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
#
# The version of the OpenAPI document: v3
#
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module GoogleDrive
  class AboutDriveThemesInner
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # A link to this theme's background image.
    @[JSON::Field(key: "backgroundImageLink", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter background_image_link : String? = nil

    # The color of this theme as an RGB hex string.
    @[JSON::Field(key: "colorRgb", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter color_rgb : String? = nil

    # The ID of the theme.
    @[JSON::Field(key: "id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter id : String? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @background_image_link : String? = nil,
      @color_rgb : String? = nil,
      @id : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] background_image_link Object to be assigned
    def background_image_link=(background_image_link : String?)
      if background_image_link.nil?
        return @background_image_link = nil
      end
      _background_image_link = background_image_link.not_nil!
      @background_image_link = _background_image_link
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] color_rgb Object to be assigned
    def color_rgb=(color_rgb : String?)
      if color_rgb.nil?
        return @color_rgb = nil
      end
      _color_rgb = color_rgb.not_nil!
      @color_rgb = _color_rgb
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] id Object to be assigned
    def id=(id : String?)
      if id.nil?
        return @id = nil
      end
      _id = id.not_nil!
      @id = _id
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@background_image_link, @color_rgb, @id)
  end
end
