#  Drive API
#
# Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
#
# The version of the OpenAPI document: v3
#
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module GoogleDrive
  @[JSON::Serializable::Options(emit_nulls: true)]
  class AboutDriveThemesInner
    include JSON::Serializable
    include JSON::Serializable::Unmapped

    # Optional properties
    # A link to this theme's background image.
    @[JSON::Field(key: "backgroundImageLink", type: String?, presence: true, ignore_serialize: background_image_link.nil? && !background_image_link_present?)]
    property background_image_link : String?

    @[JSON::Field(ignore: true)]
    property? background_image_link_present : Bool = false

    # The color of this theme as an RGB hex string.
    @[JSON::Field(key: "colorRgb", type: String?, presence: true, ignore_serialize: color_rgb.nil? && !color_rgb_present?)]
    property color_rgb : String?

    @[JSON::Field(ignore: true)]
    property? color_rgb_present : Bool = false

    # The ID of the theme.
    @[JSON::Field(key: "id", type: String?, presence: true, ignore_serialize: id.nil? && !id_present?)]
    property id : String?

    @[JSON::Field(ignore: true)]
    property? id_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(*, @background_image_link : String? = nil, @color_rgb : String? = nil, @id : String? = nil)
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.same?(o)
      self.class == o.class &&
        background_image_link == o.background_image_link &&
        color_rgb == o.color_rgb &&
        id == o.id
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [background_image_link, color_rgb, id].hash
    end
  end
end
