#  Drive API
#
# Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
#
# The version of the OpenAPI document: v3
#
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module GoogleDrive
  # Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take.
  @[JSON::Serializable::Options(emit_nulls: true)]
  class FileCapabilities
    include JSON::Serializable
    include JSON::Serializable::Unmapped

    # Optional properties
    # Whether the current user is the pending owner of the file. Not populated for shared drive files.
    @[JSON::Field(key: "canAcceptOwnership", type: Bool?, presence: true, ignore_serialize: can_accept_ownership.nil? && !can_accept_ownership_present?)]
    property can_accept_ownership : Bool?

    @[JSON::Field(ignore: true)]
    property? can_accept_ownership_present : Bool = false

    # Whether the current user can add children to this folder. This is always false when the item is not a folder.
    @[JSON::Field(key: "canAddChildren", type: Bool?, presence: true, ignore_serialize: can_add_children.nil? && !can_add_children_present?)]
    property can_add_children : Bool?

    @[JSON::Field(ignore: true)]
    property? can_add_children_present : Bool = false

    # Whether the current user can add a folder from another drive (different shared drive or My Drive) to this folder. This is false when the item is not a folder. Only populated for items in shared drives.
    @[JSON::Field(key: "canAddFolderFromAnotherDrive", type: Bool?, presence: true, ignore_serialize: can_add_folder_from_another_drive.nil? && !can_add_folder_from_another_drive_present?)]
    property can_add_folder_from_another_drive : Bool?

    @[JSON::Field(ignore: true)]
    property? can_add_folder_from_another_drive_present : Bool = false

    # Whether the current user can add a parent for the item without removing an existing parent in the same request. Not populated for shared drive files.
    @[JSON::Field(key: "canAddMyDriveParent", type: Bool?, presence: true, ignore_serialize: can_add_my_drive_parent.nil? && !can_add_my_drive_parent_present?)]
    property can_add_my_drive_parent : Bool?

    @[JSON::Field(ignore: true)]
    property? can_add_my_drive_parent_present : Bool = false

    # Whether the current user can change the copyRequiresWriterPermission restriction of this file.
    @[JSON::Field(key: "canChangeCopyRequiresWriterPermission", type: Bool?, presence: true, ignore_serialize: can_change_copy_requires_writer_permission.nil? && !can_change_copy_requires_writer_permission_present?)]
    property can_change_copy_requires_writer_permission : Bool?

    @[JSON::Field(ignore: true)]
    property? can_change_copy_requires_writer_permission_present : Bool = false

    # Whether the current user can change the securityUpdateEnabled field on link share metadata.
    @[JSON::Field(key: "canChangeSecurityUpdateEnabled", type: Bool?, presence: true, ignore_serialize: can_change_security_update_enabled.nil? && !can_change_security_update_enabled_present?)]
    property can_change_security_update_enabled : Bool?

    @[JSON::Field(ignore: true)]
    property? can_change_security_update_enabled_present : Bool = false

    # Deprecated
    @[JSON::Field(key: "canChangeViewersCanCopyContent", type: Bool?, presence: true, ignore_serialize: can_change_viewers_can_copy_content.nil? && !can_change_viewers_can_copy_content_present?)]
    property can_change_viewers_can_copy_content : Bool?

    @[JSON::Field(ignore: true)]
    property? can_change_viewers_can_copy_content_present : Bool = false

    # Whether the current user can comment on this file.
    @[JSON::Field(key: "canComment", type: Bool?, presence: true, ignore_serialize: can_comment.nil? && !can_comment_present?)]
    property can_comment : Bool?

    @[JSON::Field(ignore: true)]
    property? can_comment_present : Bool = false

    # Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder.
    @[JSON::Field(key: "canCopy", type: Bool?, presence: true, ignore_serialize: can_copy.nil? && !can_copy_present?)]
    property can_copy : Bool?

    @[JSON::Field(ignore: true)]
    property? can_copy_present : Bool = false

    # Whether the current user can delete this file.
    @[JSON::Field(key: "canDelete", type: Bool?, presence: true, ignore_serialize: can_delete.nil? && !can_delete_present?)]
    property can_delete : Bool?

    @[JSON::Field(ignore: true)]
    property? can_delete_present : Bool = false

    # Whether the current user can delete children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.
    @[JSON::Field(key: "canDeleteChildren", type: Bool?, presence: true, ignore_serialize: can_delete_children.nil? && !can_delete_children_present?)]
    property can_delete_children : Bool?

    @[JSON::Field(ignore: true)]
    property? can_delete_children_present : Bool = false

    # Whether the current user can download this file.
    @[JSON::Field(key: "canDownload", type: Bool?, presence: true, ignore_serialize: can_download.nil? && !can_download_present?)]
    property can_download : Bool?

    @[JSON::Field(ignore: true)]
    property? can_download_present : Bool = false

    # Whether the current user can edit this file. Other factors may limit the type of changes a user can make to a file. For example, see canChangeCopyRequiresWriterPermission or canModifyContent.
    @[JSON::Field(key: "canEdit", type: Bool?, presence: true, ignore_serialize: can_edit.nil? && !can_edit_present?)]
    property can_edit : Bool?

    @[JSON::Field(ignore: true)]
    property? can_edit_present : Bool = false

    # Whether the current user can list the children of this folder. This is always false when the item is not a folder.
    @[JSON::Field(key: "canListChildren", type: Bool?, presence: true, ignore_serialize: can_list_children.nil? && !can_list_children_present?)]
    property can_list_children : Bool?

    @[JSON::Field(ignore: true)]
    property? can_list_children_present : Bool = false

    # Whether the current user can modify the content of this file.
    @[JSON::Field(key: "canModifyContent", type: Bool?, presence: true, ignore_serialize: can_modify_content.nil? && !can_modify_content_present?)]
    property can_modify_content : Bool?

    @[JSON::Field(ignore: true)]
    property? can_modify_content_present : Bool = false

    # Whether the current user can modify restrictions on content of this file.
    @[JSON::Field(key: "canModifyContentRestriction", type: Bool?, presence: true, ignore_serialize: can_modify_content_restriction.nil? && !can_modify_content_restriction_present?)]
    property can_modify_content_restriction : Bool?

    @[JSON::Field(ignore: true)]
    property? can_modify_content_restriction_present : Bool = false

    # Whether the current user can move children of this folder outside of the shared drive. This is false when the item is not a folder. Only populated for items in shared drives.
    @[JSON::Field(key: "canMoveChildrenOutOfDrive", type: Bool?, presence: true, ignore_serialize: can_move_children_out_of_drive.nil? && !can_move_children_out_of_drive_present?)]
    property can_move_children_out_of_drive : Bool?

    @[JSON::Field(ignore: true)]
    property? can_move_children_out_of_drive_present : Bool = false

    # Deprecated - use canMoveChildrenOutOfDrive instead.
    @[JSON::Field(key: "canMoveChildrenOutOfTeamDrive", type: Bool?, presence: true, ignore_serialize: can_move_children_out_of_team_drive.nil? && !can_move_children_out_of_team_drive_present?)]
    property can_move_children_out_of_team_drive : Bool?

    @[JSON::Field(ignore: true)]
    property? can_move_children_out_of_team_drive_present : Bool = false

    # Whether the current user can move children of this folder within this drive. This is false when the item is not a folder. Note that a request to move the child may still fail depending on the current user's access to the child and to the destination folder.
    @[JSON::Field(key: "canMoveChildrenWithinDrive", type: Bool?, presence: true, ignore_serialize: can_move_children_within_drive.nil? && !can_move_children_within_drive_present?)]
    property can_move_children_within_drive : Bool?

    @[JSON::Field(ignore: true)]
    property? can_move_children_within_drive_present : Bool = false

    # Deprecated - use canMoveChildrenWithinDrive instead.
    @[JSON::Field(key: "canMoveChildrenWithinTeamDrive", type: Bool?, presence: true, ignore_serialize: can_move_children_within_team_drive.nil? && !can_move_children_within_team_drive_present?)]
    property can_move_children_within_team_drive : Bool?

    @[JSON::Field(ignore: true)]
    property? can_move_children_within_team_drive_present : Bool = false

    # Deprecated - use canMoveItemOutOfDrive instead.
    @[JSON::Field(key: "canMoveItemIntoTeamDrive", type: Bool?, presence: true, ignore_serialize: can_move_item_into_team_drive.nil? && !can_move_item_into_team_drive_present?)]
    property can_move_item_into_team_drive : Bool?

    @[JSON::Field(ignore: true)]
    property? can_move_item_into_team_drive_present : Bool = false

    # Whether the current user can move this item outside of this drive by changing its parent. Note that a request to change the parent of the item may still fail depending on the new parent that is being added.
    @[JSON::Field(key: "canMoveItemOutOfDrive", type: Bool?, presence: true, ignore_serialize: can_move_item_out_of_drive.nil? && !can_move_item_out_of_drive_present?)]
    property can_move_item_out_of_drive : Bool?

    @[JSON::Field(ignore: true)]
    property? can_move_item_out_of_drive_present : Bool = false

    # Deprecated - use canMoveItemOutOfDrive instead.
    @[JSON::Field(key: "canMoveItemOutOfTeamDrive", type: Bool?, presence: true, ignore_serialize: can_move_item_out_of_team_drive.nil? && !can_move_item_out_of_team_drive_present?)]
    property can_move_item_out_of_team_drive : Bool?

    @[JSON::Field(ignore: true)]
    property? can_move_item_out_of_team_drive_present : Bool = false

    # Whether the current user can move this item within this drive. Note that a request to change the parent of the item may still fail depending on the new parent that is being added and the parent that is being removed.
    @[JSON::Field(key: "canMoveItemWithinDrive", type: Bool?, presence: true, ignore_serialize: can_move_item_within_drive.nil? && !can_move_item_within_drive_present?)]
    property can_move_item_within_drive : Bool?

    @[JSON::Field(ignore: true)]
    property? can_move_item_within_drive_present : Bool = false

    # Deprecated - use canMoveItemWithinDrive instead.
    @[JSON::Field(key: "canMoveItemWithinTeamDrive", type: Bool?, presence: true, ignore_serialize: can_move_item_within_team_drive.nil? && !can_move_item_within_team_drive_present?)]
    property can_move_item_within_team_drive : Bool?

    @[JSON::Field(ignore: true)]
    property? can_move_item_within_team_drive_present : Bool = false

    # Deprecated - use canMoveItemWithinDrive or canMoveItemOutOfDrive instead.
    @[JSON::Field(key: "canMoveTeamDriveItem", type: Bool?, presence: true, ignore_serialize: can_move_team_drive_item.nil? && !can_move_team_drive_item_present?)]
    property can_move_team_drive_item : Bool?

    @[JSON::Field(ignore: true)]
    property? can_move_team_drive_item_present : Bool = false

    # Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives.
    @[JSON::Field(key: "canReadDrive", type: Bool?, presence: true, ignore_serialize: can_read_drive.nil? && !can_read_drive_present?)]
    property can_read_drive : Bool?

    @[JSON::Field(ignore: true)]
    property? can_read_drive_present : Bool = false

    # Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it is not a folder, can be read.
    @[JSON::Field(key: "canReadRevisions", type: Bool?, presence: true, ignore_serialize: can_read_revisions.nil? && !can_read_revisions_present?)]
    property can_read_revisions : Bool?

    @[JSON::Field(ignore: true)]
    property? can_read_revisions_present : Bool = false

    # Deprecated - use canReadDrive instead.
    @[JSON::Field(key: "canReadTeamDrive", type: Bool?, presence: true, ignore_serialize: can_read_team_drive.nil? && !can_read_team_drive_present?)]
    property can_read_team_drive : Bool?

    @[JSON::Field(ignore: true)]
    property? can_read_team_drive_present : Bool = false

    # Whether the current user can remove children from this folder. This is always false when the item is not a folder. For a folder in a shared drive, use canDeleteChildren or canTrashChildren instead.
    @[JSON::Field(key: "canRemoveChildren", type: Bool?, presence: true, ignore_serialize: can_remove_children.nil? && !can_remove_children_present?)]
    property can_remove_children : Bool?

    @[JSON::Field(ignore: true)]
    property? can_remove_children_present : Bool = false

    # Whether the current user can remove a parent from the item without adding another parent in the same request. Not populated for shared drive files.
    @[JSON::Field(key: "canRemoveMyDriveParent", type: Bool?, presence: true, ignore_serialize: can_remove_my_drive_parent.nil? && !can_remove_my_drive_parent_present?)]
    property can_remove_my_drive_parent : Bool?

    @[JSON::Field(ignore: true)]
    property? can_remove_my_drive_parent_present : Bool = false

    # Whether the current user can rename this file.
    @[JSON::Field(key: "canRename", type: Bool?, presence: true, ignore_serialize: can_rename.nil? && !can_rename_present?)]
    property can_rename : Bool?

    @[JSON::Field(ignore: true)]
    property? can_rename_present : Bool = false

    # Whether the current user can modify the sharing settings for this file.
    @[JSON::Field(key: "canShare", type: Bool?, presence: true, ignore_serialize: can_share.nil? && !can_share_present?)]
    property can_share : Bool?

    @[JSON::Field(ignore: true)]
    property? can_share_present : Bool = false

    # Whether the current user can move this file to trash.
    @[JSON::Field(key: "canTrash", type: Bool?, presence: true, ignore_serialize: can_trash.nil? && !can_trash_present?)]
    property can_trash : Bool?

    @[JSON::Field(ignore: true)]
    property? can_trash_present : Bool = false

    # Whether the current user can trash children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.
    @[JSON::Field(key: "canTrashChildren", type: Bool?, presence: true, ignore_serialize: can_trash_children.nil? && !can_trash_children_present?)]
    property can_trash_children : Bool?

    @[JSON::Field(ignore: true)]
    property? can_trash_children_present : Bool = false

    # Whether the current user can restore this file from trash.
    @[JSON::Field(key: "canUntrash", type: Bool?, presence: true, ignore_serialize: can_untrash.nil? && !can_untrash_present?)]
    property can_untrash : Bool?

    @[JSON::Field(ignore: true)]
    property? can_untrash_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(*, @can_accept_ownership : Bool? = nil, @can_add_children : Bool? = nil, @can_add_folder_from_another_drive : Bool? = nil, @can_add_my_drive_parent : Bool? = nil, @can_change_copy_requires_writer_permission : Bool? = nil, @can_change_security_update_enabled : Bool? = nil, @can_change_viewers_can_copy_content : Bool? = nil, @can_comment : Bool? = nil, @can_copy : Bool? = nil, @can_delete : Bool? = nil, @can_delete_children : Bool? = nil, @can_download : Bool? = nil, @can_edit : Bool? = nil, @can_list_children : Bool? = nil, @can_modify_content : Bool? = nil, @can_modify_content_restriction : Bool? = nil, @can_move_children_out_of_drive : Bool? = nil, @can_move_children_out_of_team_drive : Bool? = nil, @can_move_children_within_drive : Bool? = nil, @can_move_children_within_team_drive : Bool? = nil, @can_move_item_into_team_drive : Bool? = nil, @can_move_item_out_of_drive : Bool? = nil, @can_move_item_out_of_team_drive : Bool? = nil, @can_move_item_within_drive : Bool? = nil, @can_move_item_within_team_drive : Bool? = nil, @can_move_team_drive_item : Bool? = nil, @can_read_drive : Bool? = nil, @can_read_revisions : Bool? = nil, @can_read_team_drive : Bool? = nil, @can_remove_children : Bool? = nil, @can_remove_my_drive_parent : Bool? = nil, @can_rename : Bool? = nil, @can_share : Bool? = nil, @can_trash : Bool? = nil, @can_trash_children : Bool? = nil, @can_untrash : Bool? = nil)
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array(String).new
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.same?(o)
      self.class == o.class &&
        can_accept_ownership == o.can_accept_ownership &&
        can_add_children == o.can_add_children &&
        can_add_folder_from_another_drive == o.can_add_folder_from_another_drive &&
        can_add_my_drive_parent == o.can_add_my_drive_parent &&
        can_change_copy_requires_writer_permission == o.can_change_copy_requires_writer_permission &&
        can_change_security_update_enabled == o.can_change_security_update_enabled &&
        can_change_viewers_can_copy_content == o.can_change_viewers_can_copy_content &&
        can_comment == o.can_comment &&
        can_copy == o.can_copy &&
        can_delete == o.can_delete &&
        can_delete_children == o.can_delete_children &&
        can_download == o.can_download &&
        can_edit == o.can_edit &&
        can_list_children == o.can_list_children &&
        can_modify_content == o.can_modify_content &&
        can_modify_content_restriction == o.can_modify_content_restriction &&
        can_move_children_out_of_drive == o.can_move_children_out_of_drive &&
        can_move_children_out_of_team_drive == o.can_move_children_out_of_team_drive &&
        can_move_children_within_drive == o.can_move_children_within_drive &&
        can_move_children_within_team_drive == o.can_move_children_within_team_drive &&
        can_move_item_into_team_drive == o.can_move_item_into_team_drive &&
        can_move_item_out_of_drive == o.can_move_item_out_of_drive &&
        can_move_item_out_of_team_drive == o.can_move_item_out_of_team_drive &&
        can_move_item_within_drive == o.can_move_item_within_drive &&
        can_move_item_within_team_drive == o.can_move_item_within_team_drive &&
        can_move_team_drive_item == o.can_move_team_drive_item &&
        can_read_drive == o.can_read_drive &&
        can_read_revisions == o.can_read_revisions &&
        can_read_team_drive == o.can_read_team_drive &&
        can_remove_children == o.can_remove_children &&
        can_remove_my_drive_parent == o.can_remove_my_drive_parent &&
        can_rename == o.can_rename &&
        can_share == o.can_share &&
        can_trash == o.can_trash &&
        can_trash_children == o.can_trash_children &&
        can_untrash == o.can_untrash
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [can_accept_ownership, can_add_children, can_add_folder_from_another_drive, can_add_my_drive_parent, can_change_copy_requires_writer_permission, can_change_security_update_enabled, can_change_viewers_can_copy_content, can_comment, can_copy, can_delete, can_delete_children, can_download, can_edit, can_list_children, can_modify_content, can_modify_content_restriction, can_move_children_out_of_drive, can_move_children_out_of_team_drive, can_move_children_within_drive, can_move_children_within_team_drive, can_move_item_into_team_drive, can_move_item_out_of_drive, can_move_item_out_of_team_drive, can_move_item_within_drive, can_move_item_within_team_drive, can_move_team_drive_item, can_read_drive, can_read_revisions, can_read_team_drive, can_remove_children, can_remove_my_drive_parent, can_rename, can_share, can_trash, can_trash_children, can_untrash].hash
    end
  end
end
