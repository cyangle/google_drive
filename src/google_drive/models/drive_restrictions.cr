#  Drive API
#
# Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
#
# The version of the OpenAPI document: v3
#
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module GoogleDrive
  # A set of restrictions that apply to this shared drive or items inside this shared drive.
  class DriveRestrictions
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # Whether administrative privileges on this shared drive are required to modify restrictions.
    @[JSON::Field(key: "adminManagedRestrictions", type: Bool?, default: nil, required: false, nullable: false, emit_null: false)]
    getter admin_managed_restrictions : Bool? = nil

    # Whether the options to copy, print, or download files inside this shared drive, should be disabled for readers and commenters. When this restriction is set to true, it will override the similarly named field to true for any file inside this shared drive.
    @[JSON::Field(key: "copyRequiresWriterPermission", type: Bool?, default: nil, required: false, nullable: false, emit_null: false)]
    getter copy_requires_writer_permission : Bool? = nil

    # Whether access to this shared drive and items inside this shared drive is restricted to users of the domain to which this shared drive belongs. This restriction may be overridden by other sharing policies controlled outside of this shared drive.
    @[JSON::Field(key: "domainUsersOnly", type: Bool?, default: nil, required: false, nullable: false, emit_null: false)]
    getter domain_users_only : Bool? = nil

    # Whether access to items inside this shared drive is restricted to its members.
    @[JSON::Field(key: "driveMembersOnly", type: Bool?, default: nil, required: false, nullable: false, emit_null: false)]
    getter drive_members_only : Bool? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @admin_managed_restrictions : Bool? = nil,
      @copy_requires_writer_permission : Bool? = nil,
      @domain_users_only : Bool? = nil,
      @drive_members_only : Bool? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] admin_managed_restrictions Object to be assigned
    def admin_managed_restrictions=(new_value : Bool?)
      @admin_managed_restrictions = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] copy_requires_writer_permission Object to be assigned
    def copy_requires_writer_permission=(new_value : Bool?)
      @copy_requires_writer_permission = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] domain_users_only Object to be assigned
    def domain_users_only=(new_value : Bool?)
      @domain_users_only = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] drive_members_only Object to be assigned
    def drive_members_only=(new_value : Bool?)
      @drive_members_only = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@admin_managed_restrictions, @copy_requires_writer_permission, @domain_users_only, @drive_members_only)
  end
end
