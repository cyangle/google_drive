#  Drive API
#
# Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.
#
# The version of the OpenAPI document: v3
#
# Generated by: https://openapi-generator.tech
#

require "json"
require "time"
require "log"

module GoogleDrive
  # A list of permissions for a file.
  class PermissionList
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # Identifies what kind of resource this is. Value: the fixed string \"drive#permissionList\".
    @[JSON::Field(key: "kind", type: String?, default: "drive#permissionList", required: false, nullable: false, emit_null: false)]
    getter kind : String? = "drive#permissionList"

    # The page token for the next page of permissions. This field will be absent if the end of the permissions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.
    @[JSON::Field(key: "nextPageToken", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter next_page_token : String? = nil

    # The list of permissions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.
    @[JSON::Field(key: "permissions", type: Array(GoogleDrive::Permission)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter permissions : Array(GoogleDrive::Permission)? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @kind : String? = "drive#permissionList",
      @next_page_token : String? = nil,
      @permissions : Array(GoogleDrive::Permission)? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_permissions = @permissions).nil?
        invalid_properties.concat(OpenApi::ContainerValidator.list_invalid_properties_for(key: "permissions", container: _permissions)) if _permissions.is_a?(Array)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_permissions = @permissions).nil?
        return false if _permissions.is_a?(Array) && !OpenApi::ContainerValidator.valid?(container: _permissions)
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] kind Object to be assigned
    def kind=(new_value : String?)
      @kind = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] next_page_token Object to be assigned
    def next_page_token=(new_value : String?)
      @next_page_token = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] permissions Object to be assigned
    def permissions=(new_value : Array(GoogleDrive::Permission)?)
      unless new_value.nil?
        OpenApi::ContainerValidator.validate(container: new_value) if new_value.is_a?(Array)
      end

      @permissions = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@kind, @next_page_token, @permissions)
  end
end
